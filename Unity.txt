Instantiate(게임 오브젝트, 만들위치, 만들 오브젝트 회전값) : public GameObjet obj = Instantiate(Block, new Vector3(30, -5, 0), transform.rotation) as GameObject;
Tag : 충돌시 사용
배경움직임 : p290
Destroy(없애려는 오브젝트) : 자주사용시 메모리 오류발생할수 있음. 오브젝트 삭제 관련 다른 방법 필요.
Trigger : 실제로 부딪혀 물리적인 작동은 하지 않지만 부딪힌 경우의 타이밍을 가져올수 있는 충돌 개념.
rigidbody.AddForce(new Vector3(0, Jump_Power, 0)) : + Y 축으로 Jump_Power 만큼의 힘을 가한다(점프한다). 
OnTriggerEnter(Collider other) : Trigger 충돌체와 부딪혔을 때의 시점을 읽어오는 함수.
rigidbody.WakeUp() : 아무런 입력을 하지 않을때 rigidbody는 슬립상태가 되는데 이 상태를 깨워주는 함수
AudioSource : 객체가 사운드를 내기 위해서 필요한 컴포넌트
메카님 : 애니메이터를 이용해서 애니메이션 상태머신을 관리하는 기능.
Object.SendMessage("함수이름") : 해당 오브젝트의 "함수이름" 함수를 실행하라는 명령.
Mathf.Lerp(바꾸기전의 값, 바꿀값, 바뀔시간을 계산할 수치) : ex)Mathf.Lerp(camera.othographicSize, cameraSize, Time.deltaTime * speed);
Text_Meter.text = string.Format("{0:NO}m", Meter) : float 값인 Meter 데이터의 소숫점을 없애서 화면에 보이게 한다. 

RenderSettings.skybox : 스카이 박스 수정시 사용 (검색 ㄱㄱ)
Window -> Lighting -> Settings : 스카이 박스 6면 재질 설정


- 3D 배경
-- SkyBox
--- SkyBox 머터리얼 움직이기

- 캐릭터 (캡슐로 대체)
-- 


- Z 축전진
-- 방식
--- 러닝
---- 길을 따라 달리는 방식으로 진행
---- 길을 생성
----- Plane에 장애물을 생성해서 그 안으로 달리게 하자
----- 점프로도 피할수 있는 장애물이 있다.

-- 길
--- 카메라에 들어오는 시야만큼만 생성
--- 길의 연결
---- 연결 될수 있는 길은 현재 길의 EndIndex와 다음 길의 StartIndex가 같은 길만 올수 있다


--- 점프
---- 한칸씩 점프하는 방식으로 진행
---- 점프할 목표물을 생성



- 내 게임을 여러 언어로 현지화해보자 
-- http://cafe.naver.com/unityhub/61160
- 델리 게이트 이벤트를 활용해보자
-- http://cafe.naver.com/unityhub/59373
- 네이버 카페 플러그
-- http://cafe.naver.com/unityhub/51589






git 계정
gjvkd@naver.com
*20140317
